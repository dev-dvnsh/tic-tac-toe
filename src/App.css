/* Main application layout - centers everything beautifully on the screen */
.App {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  padding: 20px;
  gap: 20px;
}

/* The main title with a stunning animated gradient text effect */
.App h1 {
  color: white;
  font-size: 3.5em;
  font-weight: 900;
  text-shadow: 3px 3px 6px rgba(0, 0, 0, 0.3);
  margin: 0;
  text-align: center;
  background: linear-gradient(45deg, #ff6b6b, #4ecdc4, #45b7d1, #96ceb4);
  background-size: 300% 300%;
  -webkit-background-clip: text;
  -webkit-text-fill-color: transparent;
  background-clip: text;
  animation: gradientShift 3s ease-in-out infinite;
}

/* Animation that creates a flowing rainbow effect on the title */
@keyframes gradientShift {
  0%, 100% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
}

/* The main game board container with a modern glassmorphism design */
.board-container {
  background: rgba(255, 255, 255, 0.95);
  border-radius: 20px;
  padding: 40px;
  box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  max-width: 500px;
  width: 100%;
  text-align: center;
  position: relative;
  overflow: hidden;
}

/* Decorative top border that adds a colorful accent to the game board */
.board-container::before {
  content: '';
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 4px;
  background: linear-gradient(90deg, var(--secondary-color), var(--accent-color), var(--success-color));
  border-radius: 20px 20px 0 0;
}

/* Layout for each row of squares on the tic-tac-toe board */
.board-row {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-bottom: 8px;
  gap: 8px;
}

/* Removes bottom margin from the last row for better spacing */
.board-row:last-child {
  margin-bottom: 0;
}

/* Individual square styling with hover effects and smooth transitions */
.square {
  width: 100px;
  height: 100px;
  background: linear-gradient(145deg, #ffffff, #f8f9fa);
  border: 3px solid var(--border-color);
  border-radius: 15px;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  transition: all 0.3s ease;
  position: relative;
  overflow: hidden;
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Hover effect that lifts the square and changes colors */
.square:hover {
  transform: translateY(-3px);
  box-shadow: 0 8px 16px rgba(0, 0, 0, 0.2);
  border-color: var(--secondary-color);
  background: linear-gradient(145deg, #f8f9fa, #ffffff);
}

/* Click effect that provides tactile feedback */
.square:active {
  transform: translateY(-1px);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
}

/* Base styling for the X and O text inside each square */
.square h5 {
  color: var(--primary-color);
  font-size: 2.5em;
  font-weight: 900;
  text-shadow: 2px 2px 4px rgba(0, 0, 0, 0.1);
  transition: all 0.3s ease;
}

/* Scaling effect when hovering over squares with X or O */
.square:hover h5 {
  transform: scale(1.1);
}

/* Color and styling specifically for X and O pieces */
.square h5 {
  color: var(--primary-color);
}

/* Smooth transition for all text elements in squares */
.square h5:nth-child(1) {
  transition: all 0.3s ease;
}

/* Makes X pieces appear in bold red with a subtle shadow */
.square:has(h5:contains("X")) h5,
.square h5:contains("X") {
  color: var(--accent-color);
  text-shadow: 2px 2px 4px rgba(231, 76, 60, 0.3);
}

/* Makes O pieces appear in vibrant blue with a gentle shadow */
.square:has(h5:contains("O")) h5,
.square h5:contains("O") {
  color: var(--secondary-color);
  text-shadow: 2px 2px 4px rgba(52, 152, 219, 0.3);
}

/* Alternative method for coloring X pieces using data attributes */
.square[data-value="X"] h5 {
  color: var(--accent-color);
  text-shadow: 2px 2px 4px rgba(231, 76, 60, 0.3);
}

/* Alternative method for coloring O pieces using data attributes */
.square[data-value="O"] h5 {
  color: var(--secondary-color);
  text-shadow: 2px 2px 4px rgba(52, 152, 219, 0.3);
}

/* Victory message styling with celebration animation */
.winner-message {
  background: linear-gradient(145deg, var(--success-color), #229954);
  color: white;
  padding: 20px;
  border-radius: 15px;
  margin-bottom: 20px;
  font-size: 1.5em;
  font-weight: 600;
  box-shadow: var(--shadow);
  animation: celebration 0.6s ease-out;
}

/* Bouncy celebration animation for when someone wins */
@keyframes celebration {
  0% {
    transform: scale(0.8);
    opacity: 0;
  }
  50% {
    transform: scale(1.05);
  }
  100% {
    transform: scale(1);
    opacity: 1;
  }
}

/* Container for the current player turn indicator */
.game-status {
  margin-bottom: 30px;
  padding: 15px;
  background: linear-gradient(145deg, rgba(52, 152, 219, 0.1), rgba(52, 152, 219, 0.05));
  border-radius: 12px;
  border: 2px solid rgba(52, 152, 219, 0.2);
}

/* Styling for the player turn text */
.game-status h4 {
  margin: 0;
  color: var(--secondary-color);
  font-weight: 600;
}

/* Special styling for the play again button */
.play-again-btn {
  background: linear-gradient(145deg, var(--success-color), #229954);
  margin-top: 15px;
  padding: 15px 30px;
  font-size: 1.2em;
  border-radius: 15px;
}

/* Hover effect for the play again button */
.play-again-btn:hover {
  background: linear-gradient(145deg, #229954, var(--success-color));
}

/* Responsive design adjustments for tablet-sized screens */
@media (max-width: 600px) {
  .board-container {
    padding: 20px;
    margin: 10px;
  }
  
  .square {
    width: 80px;
    height: 80px;
  }
  
  .square h5 {
    font-size: 2em;
  }
  
  h4 {
    font-size: 1.2em;
  }
  
  button {
    padding: 10px 20px;
    font-size: 1em;
  }
}

/* Further responsive adjustments for mobile phone screens */
@media (max-width: 400px) {
  .square {
    width: 70px;
    height: 70px;
  }
  
  .square h5 {
    font-size: 1.8em;
  }
  
  .board-row {
    gap: 5px;
  }
}
